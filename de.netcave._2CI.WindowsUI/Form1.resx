<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="audioFileBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EU2B/wc8V+0lLbEOLgAAAABJRU5ErkJggg==
</value>
  </data>
</root>